trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - '*'

#trigger: none

variables:
  - group: sas-token-group
  - name: 'storageAccount'
    value: 'storterraformd01'
  - name: 'container'
    value: 'azcopycontainer'
  - name: 'StageName'
    value: 'AzCopy_Ubuntu_Agent_Test'
  - name: AgentImage
    value: ubuntu-latest
  - name: AzCopyLogPath
    value: '/home/vsts/.azcopy/'

stages:
  - stage: ${{ variables.StageName }}
    displayName: ${{ variables.StageName }}
    jobs:
      - job: ${{ variables.StageName }}
        displayName: ${{ variables.StageName }}
        pool:
          vmImage: ${{ variables.AgentImage }}

        steps:
          - checkout: self
            fetchDepth: 0

          - task: PowerShell@2
            displayName: 'Print AzCopy ENV ${{ variables.AgentImage }}'
            inputs:
              targetType: 'inline'
              pwsh: true
              script: azcopy env

          - task: PowerShell@2
            displayName: 'AzCopy PowerShell ${{ variables.AgentImage }}'
            continueOnError: true
            inputs:
              targetType: 'filePath'
              pwsh: true
              filePath: '$(System.DefaultWorkingDirectory)/AzCopy-Wrapper.ps1'
              arguments: >
                -SourceFolder "$(System.DefaultWorkingDirectory)/test-images"
                -StorageAccount "${{ variables.storageAccount }}"
                -StorageContainer "${{ variables.container }}"
                -SasToken "$(sas-token)"
                -TargetFolderPrefix "from-powershell"

          - task: PowerShell@2
            displayName: 'Print AzCopy Logs ${{ variables.AgentImage }}'
            inputs:
              targetType: 'inline'
              pwsh: true
              script: |
                $LogPath = "${{ variables.AzCopyLogPath }}"
                $LogFiles = Get-ChildItem -Path $LogPath -Filter "*.log"
                foreach ($file in $LogFiles) {
                    Write-Host "`n--- Contents of: $($file.FullName) ---`n"
                    Get-Content $file.FullName
                }
